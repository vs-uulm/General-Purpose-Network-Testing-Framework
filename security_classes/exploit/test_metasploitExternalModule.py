import time
from unittest import TestCase

from metasploit_external import MetasploitExternalModule, MsfConfig, MsfLogger


class TestMetasploitExternalModule(TestCase):

    def test_can_run_module(self):
        module = MetasploitExternalModule(password="pass123", module_type="auxiliary",
                                          module_name="scanner/ssh/ssh_login",
                                          exploit_options={"RPORT": 22, "RHOSTS": "127.0.0.1",
                                                           "USERPASS_FILE": "/home/philipp/tmp/msf/pass.txt"},
                                          payload=None)
        module.run_module()
        module.await_job_finish()
        assert module.await_session_creation_last_job(10)
        print(module.get_session_list())

    def test_complete_run(self):
        attempts = 5
        msf_conf = MsfConfig("dummy_msf_config.ini")
        module_options = {}
        for key in msf_conf.mod_options.keys():
            module_options[key] = msf_conf.mod_options[key]
        logger = MsfLogger(0, "logs")
        msf = MetasploitExternalModule(msf_logger=logger,
                                       password=msf_conf.connection['password'],
                                       module_type=msf_conf.module['module_type'],
                                       module_name=msf_conf.module['module_name'],
                                       exploit_options=module_options,)
        msf.attempt_break_in(timeout=10)
        print("done.")

